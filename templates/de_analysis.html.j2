{% extends "base.html.j2" %}

{% block title %}Analysis{% endblock %}

{% block body %}
<!-- Naming convention: ID: all-lower variable: camelCase enum: ALL_UPPER -->
<!-- <h3 class="mb-3">Analysis</h3> -->
<div>
  <div class="row">
    <div class="col-3">
      <fieldset class="mb-3 p-2 bg-light">
        <div class="p-0 d-flex">
          <h5 class="mb-3 flex-grow-1">Sample filter</h5>
          <button type="button" class="btn btn-outline-secondary" onclick="resetFilter()" title="Reset filter"><i class="fas fa-trash"></i></button>
        </div>
        <label for="sample-id-input" class="form-label">Case ID</label>
        <input type="text" class="form-control mb-2" id="sample-id-input" pattern="\S+">
        <label for="disease-select" class="form-label">Disease</label>
        <select class="form-select mb-2" aria-label="Select disease" id="disease-select">
          <option value="" selected></option>
          {% for disease in ["AA","AL","ALL","AML","APL","B-ALL","MDS","MPAL","T-ALL","T-LBL"] -%}
          <option value="{{ disease }}">{{ disease }}</option>
          {% endfor %}
        </select>
        <label for="gender-select" class="form-label">Gender</label>
        <select class="form-select mb-2" aria-label="Select gender" id="gender-select">
          <option value="" selected></option>
          <option value="Male">Male</option>
          <option value="Female">Female</option>
        </select>
        <label class="form-label">Age range</label>
        <div class="input-group">
          <input class="form-control" type="number" id="age-min-input" min="0">
          <span class="input-group-text">-</span>
          <input class="form-control" type="number" id="age-max-input" min="0">
        </div>
      </fieldset>
      <ul class="nav nav-tabs" id="analysis-type-tab" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="differential-analysis-tab" data-bs-toggle="tab" data-bs-target="#differential-analysis-pane" type="button" role="tab" aria-controls="differential-analysis-pane" aria-selected="true">Differential &amp;<br> Survival</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="correlation-analysis-tab" data-bs-toggle="tab" data-bs-target="#correlation-analysis-pane" type="button" role="tab" aria-controls="correlation-analysis-pane" aria-selected="false">Correlation</button>
        </li>
      </ul>
      <div class="tab-content">
        <div id="differential-analysis-pane" class="tab-pane fade show active" role="tabpanel" aria-labelledby="differential-analysis-tab">
          <fieldset class="mb-3 p-2 bg-light">
            <h5 class="mb-2">Analysis type</h5>
            <div class="mb-2">
              <div class="form-check form-check-inline">
                <input id="analysis-is-differential-check" class="form-check-input" type="radio" name="analysisType" value="differential" checked>
                <label class="form-check-label" for="analysis-is-differential-check">Differential</label>
              </div>
              <div class="form-check form-check-inline">
                <input id="analysis-is-survival-check" class="form-check-input" type="radio" name="analysisType" value="survival" disabled>
                <label class="form-check-label" for="analysis-is-survival-check">Survival</label>
              </div>
            </div>
            <h5 class="mb-2">Variable</h5>
            <div class="mb-2">
              <div class="form-check form-check-inline">
                <input id="variable-is-group-check" class="form-check-input" type="radio" name="survivalVariable" value="group" checked disabled>
                <label class="form-check-label" for="variable-is-group-check">Groups</label>
              </div>
              <div class="form-check form-check-inline">
                <input id="variable-is-gene-check" class="form-check-input" type="radio" name="survivalVariable" value="gene" disabled>
                <label class="form-check-label" for="variable-is-gene-check">Gene</label>
              </div>
            </div>
            <h5 class="mb-2">Sample grouping</h5>
            <div class="mb-3">
              <form class="row g-2 mb-3" onsubmit="return addSampleGroup()"><!-- Use form to auto submit when pressing Enter. -->
                <div class="col">
                  <input type="text" placeholder="Group1" class="form-control" id="group-name-input" pattern="\S+">
                </div>
                <div class="col-auto">
                  <button type="submit" class="btn btn-outline-primary" title="Create sample group"><i class="fas fa-plus"></i></button>
                </div>
              </form>
              <div class="row">
                <div class="col">
                  <div class="list-group" id="group-list">
                    <a href="#" id="group-list-item-no-group" title="Exclude selected samples from any group" class="list-group-item list-group-item-secondary list-group-item-action d-flex justify-content-between align-items-center">No group</a>
                  </div>
                </div>
              </div>
            </div>
            <form onsubmit="return plot_differential_or_survival()">
              <h5 class="mb-2">Gene</h5>
              <!-- <label for="gene-id-input" class="form-label">Gene ID</label> -->
              <input type="text" class="form-control mb-3" id="gene-id-input" pattern="\S+" required>
              <button type="submit" class="btn btn-outline-primary" id="plot-differential-button">Analyze</button>
            </form>
          </fieldset>
        </div>
        <div id="correlation-analysis-pane" class="tab-pane fade" role="tabpanel" aria-labelledby="correlation-analysis-tab">
          <form class="mb-3 p-2 bg-light" onsubmit="return plot_correlation()">
            <h5 class="mb-2">Gene 1</h5>
            <input type="text" class="form-control mb-3" id="gene-1-id-input" pattern="\S+" required>
            <h5 class="mb-2">Gene 2</h5>
            <input type="text" class="form-control mb-3" id="gene-2-id-input" pattern="\S+" required>
            <button type="submit" class="btn btn-outline-primary" id="plot-correlation-button">Analyze</button>
          </form>
        </div>
      </div>
    </div>
    <div class="col-9">
      <div class="row mb-3 align-items-center">
        <div class="col-auto">Use dataset:</div>
        <div class="col-auto">
          <select class="form-select" id="use-dataset-select">
            <option value="QAPA" selected>QAPA</option>
            <option value="DaPars">DaPars</option>
          </select>
        </div>
      </div>
      <ul class="nav nav-tabs" id="case-table-and-result-tab" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="case-table-tab" data-bs-toggle="tab" data-bs-target="#case-table-pane" type="button" role="tab" aria-controls="case-table-pane" aria-selected="true">Case table</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="result-tab" data-bs-toggle="tab" data-bs-target="#result-pane" type="button" role="tab" aria-controls="result-pane" aria-selected="false">Result</button>
        </li>
      </ul>
      <div class="tab-content">
        <div class="tab-pane fade ratio ratio-16x9" id="result-pane" role="tabpanel" aria-labelledby="result-tab"><!-- d-flex flex-column -->
          <div id="plot-region"><!-- class="flex-grow-1" -->You haven't done any analysis yet.</div>
        </div>
        <div class="tab-pane fade show active" id="case-table-pane" role="tabpanel" aria-labelledby="case-table-tab"><!-- d-flex flex-column -->
          <div id="case-data-table-toolbar" class="btn-toolbar" role="toolbar" aria-label="Table toolbar">
            <div class="btn-group" role="group" aria-label="Table selection buttons">
              <button onclick="selectAll()" class="btn btn-outline-secondary" title="Select visible"><i class="far fa-check-square"></i></button>
              <button onclick="deselectAll()" class="btn btn-outline-secondary" title="Deselect visible"><i class="far fa-square"></i></button>
              <button onclick="invertSelection()" class="btn btn-outline-secondary" title="Invert selection"><i class="fas fa-exchange-alt"></i></button>
            </div>
            <div id="selected-row-count-indicator" class="align-self-center ms-2">0 sample(s) selected</div>
          </div>
          <table id="case-data-table" data-classes="table table-bordered" data-toolbar="#case-data-table-toolbar" data-pagination="true" data-show-columns="true" data-show-export="true" data-sortable="true" data-sort-reset="true" data-unique-id="rowid" data-click-to-select="true" data-checkbox-header="false" data-row-style="rowStyle" data-export-types='["json","xml","csv","txt"]' data-buttons-class="outline-secondary" data-icons='{"columns":"fa-filter","export":"fa-save"}' data-icons-prefix="fa"><!-- data-toggle="table" --><!-- data-filter-control="true" data-filter-control-container="#sample-filter-form" data-height="633" -->
            <!-- <thead>
              <tr>
                <th data-checkbox="true"></th>
                <th data-field="group" data-sortable="true" data-formatter="groupNameFormatter">Group</th>
                <th data-field="rowid" data-sortable="true" data-visible="false">No.</th>
                <th data-field="sample_id" data-sortable="true">Case ID</th>
                <th data-field="gender" data-sortable="true">Gender</th>
                <th data-field="age" data-sortable="true">Age</th>
                <th data-field="diagnosis" data-sortable="true">Diagnosis</th>
                <th data-field="is_recurrence" data-sortable="true" data-visible="false">Is recurrence</th>
                <th data-field="duplication_rate" data-sortable="true" data-formatter="percentFormatter">Duplication<br>ratio</th>
                <th data-field="cancer_cell_rate" data-sortable="true" data-formatter="percentFormatter">Cancer cell<br>ratio</th>
                <th data-field="fusion_genes" data-sortable="true">Fusion genes</th>
                <th data-field="sample_source" data-sortable="true" data-visible="false">Sample<br>source</th>
              </tr>
            </thead> -->
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block all_CSS %}
{{ super() }}
{{ deps.font_awesome() }}
{{ deps.bootstrap_table_CSS() }}
{% endblock %}

{% block all_JS %}
<!-- jQuery used by bootstrap-table -->
{{ deps.jQuery() }}
{{ super() }}
{{ deps.bootstrap_table_JS() }}
{{ deps.bootstrap_table_export_plugin() }}
{# {{ deps.bootstrap_table_filter_plugin() }} #}
{# {{ deps.bootstrap_table_lang() }} #}
{{ deps.plotly() }}
{# {{ deps.plotly_lang() }} #}
<script>
  // Hack: Non semantic row styles (but is there any other way?)
  var colorStyles = ['primary', 'success', 'danger', 'warning', 'info', 'secondary'];
  var currentGroupCount = 1;  // Have to use global var
  function groupNameFormatter(value, row, index) {
    if (value) {
      return $('#group-list-item-'+value.toString()+' .group-list-item-text-content').text();
    }
    else {
      return null;
    }
  }
  function percentFormatter(value, row, index) {
    return (value*100).toPrecision(4)+'%';
  }
  function resetFilter() {
    $('#sample-id-input').val('');
    $('#disease-select').val('');
    $('#gender-select').val('');
    $('#age-min-input').val('');
    $('#age-max-input').val('');
    deferUpdateFilter();
  }
  function addSampleGroup() {
    var groupName = $('#group-name-input').val();
    if (groupName == '')
      groupName = 'Group'+currentGroupCount.toString();
    var groupNameDuplicated = false;
    $('#group-list .group-list-item-text-content').each(function(i, o) {
      if ($(o).text() == groupName)
        groupNameDuplicated = true;
    });
    if (groupNameDuplicated) {
      alert('Group names can\'t be the same. Please specify another group name.');
      return false;
    }
    var newGroup = $('<a id="group-list-item-'+currentGroupCount.toString()+'" href="#" title="Add selected samples to this group" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"><div><span class="group-list-item-text-content me-2 align-middle">'+groupName+'</span><span class="badge bg-'+colorStyles[(currentGroupCount-1) % colorStyles.length]+' rounded-pill align-middle">0</span></div><button type="button" class="btn-close" aria-label="Remove group" title="Remove group"></button></a>'); // FIXME: For efficiency id is used, but it's not good.
    $('#group-list').append(newGroup);
    newGroup.data('groupIdx', currentGroupCount);
    currentGroupCount = currentGroupCount+1;
    // Note: Remove event should remove all corresponding row groups(not only visible).
    newGroup.click(function(e) {
      $('#use-dataset-select').prop('disabled', true);
      var selections = $('#case-data-table').bootstrapTable('getSelections');
      if (selections.length) {
        selections.slice(1).forEach(function(o) {
          $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: o.rowid, field: 'group', value: $(e.currentTarget).data('groupIdx'), reinit: false});
        });
        $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: selections[0].rowid, field: 'group', value: $(e.currentTarget).data('groupIdx')});  // To use reinit:true
      }
      deselectAll();
      updateGroupSize();
      return false;
    });
    newGroup.children('.btn-close').click(function(e){
      e.stopPropagation();
      var thisGroupIdx = $(e.currentTarget).parent().data('groupIdx');
      var allData = $('#case-data-table').bootstrapTable('getData',{unfiltered:true});
      var thisGroupRows = allData.filter(function(o){return o.group == thisGroupIdx}).map(function(o){return o.rowid});
      if (thisGroupRows.length) {
        thisGroupRows.slice(1).forEach(function(i) {
          $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: i, field: 'group', value: null, reinit: false});
        });
        $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: thisGroupRows[0], field: 'group', value: null});
      }
      $(e.currentTarget).parent().remove();
      return false;
    });
    $('#group-name-input').val('');
    return false;
  }
  function updateGroupSize() {
    var allData = $('#case-data-table').bootstrapTable('getData',{unfiltered:true});
    $('#group-list').children().each(function(i, listItem) {
      var badge = $(listItem).find('.badge');  // Remember the difference between children() and find()
      if (badge.length == 0) {  // Not exist (the "No-group" item)
        return;
      }
      var groupIdx = $(listItem).data('groupIdx');
      var groupSize = 0;
      allData.forEach(function(o) {
        if (o.group == groupIdx)
          groupSize = groupSize+1;
      });
      badge.text(groupSize.toString());
    });
  }
  function rowStyle(row, index) {
    if (row.group) {
      return {
        classes:'table-'+colorStyles[(row.group-1) % colorStyles.length]
      };
    }
    else {
      return {};
    }
  }
  var hTimer = null;
  function deferUpdateFilter() {
    if (hTimer != null) {
      clearTimeout(hTimer);
    }
    hTimer = setTimeout(updateFilter, 300);
  }
  function updateFilter() {
    var sampleId = $('#sample-id-input').val();
    var disease = $('#disease-select').val();
    var gender = $('#gender-select').val();
    var ageMin = $('#age-min-input').val();
    var ageMax = $('#age-max-input').val();
    if (sampleId == "" && disease == "" && gender == "" && ageMin == "" && ageMax == "") {
      $('#case-data-table').bootstrapTable('filterBy', {});
    }
    else {
      var rowids = $('#case-data-table').bootstrapTable('getData',{unfiltered:true}).filter(function(row) {
        return ((sampleId == "" || row.sample_id.startsWith(sampleId)) &&
          (gender == "" || row.gender.toLowerCase() == gender.toLowerCase()) && 
          (disease == "" || row.diagnosis == disease) && 
          (ageMin == "" || row.age >= parseInt(ageMin)) && 
          (ageMax == "" || row.age <= parseInt(ageMax)));
      }).map(function(row) {return row.rowid});
      $('#case-data-table').bootstrapTable('filterBy', {rowid: rowids});
    }
  }
  function invertSelection() {
    // FIXME: It's the official way, but is it a hack???
    $('#case-data-table').bootstrapTable('togglePagination').bootstrapTable('checkInvert').bootstrapTable('togglePagination');
  }
  function selectAll() {
    $('#case-data-table').bootstrapTable('checkBy', {field:'rowid', values:$('#case-data-table').bootstrapTable('getData', {useCurrentPage:false, includeHiddenRows:false}).map(function(o){return o.rowid}), onlyCurrentPage:false});
  }
  function deselectAll() {
    $('#case-data-table').bootstrapTable('uncheckBy', {field:'rowid', values:$('#case-data-table').bootstrapTable('getData', {useCurrentPage:false, includeHiddenRows:false}).map(function(o){return o.rowid}), onlyCurrentPage:false});
  }
  var plotted = false;
  function plot(ajax_arg) {
    bootstrap.Tab.getInstance($('#result-tab')[0]).show();
    $('#plot-differential-button').prop("disabled", true);
    $('#plot-correlation-button').prop("disabled", true);
    $.ajax(ajax_arg).always(function() {
      if (plotted) {
        Plotly.purge($('#plot-region')[0]);
      }
      $('#plot-region').empty();
    }).done(function(data) {
      Plotly.newPlot($('#plot-region')[0], data['data'], data['layout'], {responsive: true});
      plotted = true;
    }).fail(function(jqXHR) {
      $('#plot-region').text("Error: "+JSON.parse(jqXHR.responseText).description);
      plotted = false;
    });
    $('#plot-differential-button').prop("disabled", false);
    $('#plot-correlation-button').prop("disabled", false);
  }
  function plot_differential_or_survival() {
    var data;
    var analysisType = $('input[type=radio][name=analysisType]:checked').val();
    var survivalVariable = $('input[type=radio][name=survivalVariable]:checked').val();
    if (analysisType == 'differential' || survivalVariable == 'group') {
      var groupNameIdx = {};
      $('#group-list').children().each(function(idx, o) {
        var item = $(o).find('.group-list-item-text-content');
        if (item.length && parseInt($(o).find('.badge').text()) > 0)
          groupNameIdx[item.text()] = $(o).data('groupIdx');
      });
      if (Object.keys(groupNameIdx).length < 2) {
        alert('Analysis needs 2 or more non-empty groups. Please create groups and add samples (rows) to them.');
        return false;
      }
      var groupIdxs = $('#case-data-table').bootstrapTable('getData',{unfiltered:true}).map(function(o){return o.group});
      if (analysisType == 'differential') {
        data = {
          gene: $('#gene-id-input').val(),
          group_name_indexes: groupNameIdx,
          sample_groups: groupIdxs
        };
      }
      else {
        data = {
          survival_variable: survivalVariable,
          group_name_indexes: groupNameIdx,
          sample_groups: groupIdxs
        };
      }
    }
    else {
      var selectedRows = $('#case-data-table').bootstrapTable('getSelections').map(function(o){return o.rowid});
      if (!check_before_correlation(selectedRows)) {
        return false;
      }
      data = {
        survival_variable: survivalVariable,
        gene: $('#gene-id-input').val(),
        selected_indexes: selectedRows
      };
    }
    plot({
      url: '/' + $('#use-dataset-select').val() + '/' + (analysisType == 'differential' ? 'de_analysis_plot' : 'survival_plot'),
      data: JSON.stringify(data),
      method: 'POST',
      contentType: 'application/json',
      dataType: 'json'
    });
    return false;
  }
  function check_before_correlation(selectedRows) {
    if (selectedRows.length == 0) {
      alert('Please select rows you want to use in the analysis in the table.');
      return false;
    }
    return true;
  }
  function plot_correlation() {
    var gene1Id = $('#gene-1-id-input').val();
    var gene2Id = $('#gene-2-id-input').val();
    var selectedRows = $('#case-data-table').bootstrapTable('getSelections').map(function(o){return o.rowid});
    if (check_before_correlation(selectedRows)) {
      plot({
        url: '/'+$('#use-dataset-select').val()+'/gene_correlation_plot',
        data: JSON.stringify({
          gene1: gene1Id,
          gene2: gene2Id,
          selected_indexes: selectedRows
        }),
        method: 'POST',
        contentType: 'application/json',
        dataType: 'json'
      });
    }
    return false;
  }
  function reload_table(need_destroy) {
    if (need_destroy) {
      $('#case-data-table').bootstrapTable('destroy');
    }
    $.get('/'+$('#use-dataset-select').val()+'/de_analysis_table_header', function(result) {
      $('#case-data-table').bootstrapTable({columns:result, url:'/'+$('#use-dataset-select').val()+'/de_analysis_table'});
    });
  }
  $(document).ready(function() {
    reload_table(false);

    var tab1 = new bootstrap.Tab($('#result-tab')[0]);
    var tab2 = new bootstrap.Tab($('#case-table-tab')[0]);
    
    $('#group-list-item-no-group').click(function(e) {
      var selections = $('#case-data-table').bootstrapTable('getSelections');
      if (selections.length) {
        selections.slice(1).forEach(function(o) {
          $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: o.rowid, field: 'group', value: null, reinit: false});
        });
        $('#case-data-table').bootstrapTable('updateCellByUniqueId', {id: selections[0].rowid, field: 'group', value: null});
      }
      deselectAll();
      updateGroupSize();
      return false;
    });

    $('#sample-id-input').on('input', deferUpdateFilter);
    $('#disease-select').change(deferUpdateFilter);
    $('#gender-select').change(deferUpdateFilter);
    $('#age-min-input').on('input', deferUpdateFilter);
    $('#age-max-input').on('input', deferUpdateFilter);

    $('#case-data-table').on('check.bs.table check-all.bs.table check-some.bs.table uncheck.bs.table uncheck-all.bs.table uncheck-some.bs.table', function() {
      $('#selected-row-count-indicator').text($('#case-data-table').bootstrapTable('getSelections').length.toString()+' sample(s) selected');
    });

    $('#use-dataset-select').change(function() {
      reload_table(true);
      $('#analysis-is-survival-check').prop('disabled', $('#use-dataset-select').val() == "QAPA");
    });

    $('input[type=radio][name=analysisType]').change(function() {
      // $('#gene-id-input').prop('disabled', $('#analysis-is-survival-check').prop('checked'));
      var is_differential = $('#analysis-is-differential-check').prop('checked');
      $('input[type=radio][name=survivalVariable]').prop('disabled', is_differential);
      $('#gene-id-input').prop('required', is_differential || $('#variable-is-gene-check').prop('checked'));
    });
    $('input[type=radio][name=survivalVariable]').change(function() {
      $('#gene-id-input').prop('required', $('#variable-is-gene-check').prop('checked'));
    });
  });
</script>
{% endblock %}
